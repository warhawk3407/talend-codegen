<%@ jet
imports="
        java.util.List
        java.util.Set
        org.talend.components.api.component.ComponentDefinition
        org.talend.core.model.metadata.IMetadataColumn
        org.talend.core.model.metadata.IMetadataTable
        org.talend.core.model.metadata.types.JavaType
        org.talend.core.model.metadata.types.JavaTypesManager
        org.talend.core.model.process.ElementParameterParser
        org.talend.core.model.process.IConnection
        org.talend.core.model.process.IConnectionCategory
        org.talend.core.model.process.INode
        org.talend.designer.codegen.config.CodeGeneratorArgument
        org.talend.designer.core.generic.model.Component
        org.talend.core.model.utils.NodeUtil
        "
%>

<%@include file="@{org.talend.designer.codegen}/jet_stub/generic/component_util_indexedrecord_to_rowstruct.javajet"%>
<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();
Component component = (Component)node.getComponent();
ComponentDefinition def = component.getComponentDefinition();

IndexedRecordToRowStructGenerator rejectIrToRow = null;

List<? extends IConnection> outgoingConns = node.getOutgoingSortedConnections();
if (outgoingConns!=null){
   for (int i = 0; i < outgoingConns.size(); i++) {
       IConnection outgoingConn = outgoingConns.get(i);
       if ("REJECT".equals(outgoingConn.getConnectorName())) {
           rejectIrToRow = new IndexedRecordToRowStructGenerator(cid + "OutReject",
                   outgoingConn);
       }
   }
}

%>
if (writer_<%=cid%> instanceof org.talend.components.api.component.runtime.WriterWithFeedback<?, ?, ?>) {
<%
if (rejectIrToRow != null) {
%>
	// Handle rejects after close
    java.util.Iterator<?> outgoingRejectRecords_<%=cid%> = ((org.talend.components.api.component.runtime.WriterWithFeedback<?, ?, ?>)writer_<%=cid%>).getRejectedWrites().iterator();
    <%=rejectIrToRow.getConnection().getName()%> = null;
    while (outgoingRejectRecords_<%=cid%>.hasNext()) {
        <%=rejectIrToRow.getConnection().getName()%> = new <%=rejectIrToRow.getConnection().getName() %>Struct();
        Object outgoingReject_<%=cid%> = outgoingRejectRecords_<%=cid%>.next();
        <%
            rejectIrToRow.generateConvertRecord("outgoingReject_" + cid, rejectIrToRow.getConnection().getName());
        %>
<%
	// while finished in handle_rejects_end
}
// if finished in handle_rejects_end
%>
